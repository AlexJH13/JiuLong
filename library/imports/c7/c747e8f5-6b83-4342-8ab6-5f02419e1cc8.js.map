{"version":3,"sources":["assets/Script/Game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Cell from \"./Cell\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Game extends cc.Component {\n\n    @property(cc.Prefab)\n    cellPrefab: cc.Prefab = null;\n\n    @property(cc.Node)\n    mainNode: cc.Node = null;\n\n    // 5*7 的二维数组\n    matrix: cc.Node[][]  = [];\n\n\n    touchSum: number = 0;\n    showSum: number = 0;\n\n    touchEnable: boolean = false;\n    lastTouchCell: Cell = null;\n\n    touchNodeList: cc.Node[] = [];\n    \n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart.bind(this), this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoved.bind(this), this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnded.bind(this), this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnded.bind(this), this);\n    }\n\n    start () {\n        this.createGame();\n    }\n\n    private createGame(): void {\n        for (let row = 0; row < 7; row++) {\n            let rowArray = []\n            for (let clo = 0; clo < 5; clo++) {\n                let node = cc.instantiate(this.cellPrefab);\n                let cell = node.getComponent(Cell);\n                cell.matrix = cc.v2(row, clo);\n                cell.value = Math.pow(2, this.getRandomIntInclusive(1, 7));\n                node.parent = this.mainNode;\n                rowArray.push(node);\n            }\n            this.matrix.push(rowArray);\n        }\n    }\n\n    private getRandomIntInclusive(min: number, max: number): number {\n        // 确保 min 和 max 是整数\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min; // 包含 min 和 max\n    }\n\n    private addTouchCell(cell: Cell): void {\n        cell.node.scale = 1.05;\n        this.touchNodeList.push(cell.node);\n        cell.getComponent(Cell).touched = true;\n        this.touchSum += cell.getComponent(Cell).value;\n        this.showSum = Math.pow(2, Math.ceil(Math.log2(this.touchSum)));\n        this.lastTouchCell = cell;\n    }\n\n    private touchStart(event: cc.Event.EventTouch): void {\n        for (let row = 0; row < 7; row++) {\n            for (let clo = 0; clo < 5; clo++) {\n                let cell = this.matrix[row][clo];\n                if(cell.getBoundingBoxToWorld().contains(event.getLocation())) {\n                    this.touchEnable = true;\n                    this.addTouchCell(cell.getComponent(Cell));\n                    return;\n                }\n            }\n        }\n    }\n\n    private touchMoved(event: cc.Event.EventTouch): void {\n        if (this.touchEnable) {\n            if (this.lastTouchCell) {\n                for (let row = this.lastTouchCell.matrix.x - 1; row <= this.lastTouchCell.matrix.x + 1; row++) {\n                    for (let clo = this.lastTouchCell.matrix.y -1; clo <= this.lastTouchCell.matrix.y + 1; clo++) {\n                        if (row < 0 || row > 6 || clo < 0 || clo > 4) {\n                            continue;\n                        }\n                        let cell = this.matrix[row][clo];\n                        if (cell.getComponent(Cell).touched || cell.getComponent(Cell).value > this.showSum) {\n                            continue;\n                        }\n                        if(cell.getBoundingBoxToWorld().contains(event.getLocation())) { \n                            this.addTouchCell(cell.getComponent(Cell));\n                            return;\n                        }\n                    }\n                }\n            }\n            \n        }\n    }\n\n    private touchEnded(event: cc.Event.EventTouch): void {\n        this.touchSum = 0;\n        this.showSum = 0;\n        this.touchEnable = false;\n        this.touchNodeList = [];\n    }\n\n    // update (dt) {}\n}\n"]}