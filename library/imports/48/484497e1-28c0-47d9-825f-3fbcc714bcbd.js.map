{"version":3,"sources":["assets/Script/Cell.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport { Config } from \"./Config\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Cell extends cc.Component {\n\n    @property(cc.Label)\n    text: cc.Label = null;\n\n    private _cellId: string = null;\n\n    private _value: number = 0;\n\n    private _matrix: cc.Vec2 = null;\n\n    private _touched: boolean = false;\n\n    private _preTouchCell: Cell = null;\n\n    private _graphics: cc.Graphics = null;\n\n    private config: {[key: number]: cc.Color} = {\n        2: cc.color().fromHEX('#ff7778'),\n        4: cc.color().fromHEX('#a976f3'),\n        8: cc.color().fromHEX('#ffc700'),\n        16: cc.color().fromHEX('#81cd64'),\n        32: cc.color().fromHEX('#63c7ff'),\n        64: cc.color().fromHEX('#feb178'),\n        128: cc.color().fromHEX('#598bdb'),\n    }\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    public set touched(flag: boolean) {\n        this._touched = flag;\n        if (this._touched) {\n            cc.tween(this.node)\n            .to(0.1, {scale: 1.07}, {easing: 'cubicOut'})\n            .start();\n        } else {\n            this.graphics = null;\n            cc.tween(this.node)\n            .to(0.1, {scale: 1}, {easing: 'cubicIn'})\n            .start();\n        }\n    }\n\n    public updatePos(withMove: boolean = false): void {\n        let pos = this.getPosFromMatrix();\n        this.node.setPosition(pos);\n    }\n\n    public set graphics(graphics: cc.Graphics) {\n        if (graphics) {\n            this._graphics = graphics;\n        } else if(this._graphics){\n            this._graphics.clear();\n            this._graphics.node.destroy();\n            this._graphics = null;\n        }\n    }\n\n    public get graphics(): cc.Graphics {\n        return this._graphics;\n    }\n\n    public set cellId(id: string) {\n        this._cellId = id;\n    }\n\n    public get cellId(): string {\n        return this._cellId;\n    }\n\n    public set preTouchCell(cell: Cell) {\n        this._preTouchCell = cell;\n    }\n\n    public get preTouchCell(): Cell {\n        return this._preTouchCell;\n    }\n\n    public get touched(): boolean {\n        return this._touched;\n    }\n\n    public set matrix(v: cc.Vec2) {\n        this._matrix = v;\n    }\n    \n    public get matrix() : cc.Vec2 {\n        return this._matrix;\n    }\n    \n    public set value(v : number) {\n        if (this.config[v]) {\n            this._value = v;\n            this.text.string = v.toString();\n            this.node.color = this.config[v];\n        }\n    }\n    \n    public get value() : number {\n        return this._value;\n    }\n\n    private getPosFromMatrix(): cc.Vec2 {\n        let size = this.node.getContentSize();\n        let pos = cc.Vec2.ZERO;\n        pos.x = this.calculateFromMatrix(this._matrix.x, Config.MAX_COL, Config.CELL_SPACING, size.width);\n        pos.y = this.calculateFromMatrix(this._matrix.y, Config.MAX_ROW, Config.CELL_SPACING, size.height);\n        return pos;\n    }\n\n    private calculateFromMatrix(x: number, max: number, spacing: number, width: number): number {\n        const xr = max % 2;\n        const xq = Math.floor(max / 2);\n        if (xr != 0) {\n            // 奇数，中心点就是xq;\n            const deltaX = x - xq;\n            return deltaX * (spacing + width);\n        } else {\n            //偶数，xq 是中心偏右的那个元素\n            const centerX = xq - 0.5;\n            const deltaX = x > centerX ? Math.floor(x - centerX) :  Math.ceil(x - centerX);\n            let p = x > centerX ? 1: -1;\n            return (0.5 * width + spacing / 2) * p + deltaX * (spacing + width);\n        }\n    }\n\n    protected onDestroy(): void {\n        if (this._graphics) {\n            this._graphics.clear();\n            this._graphics.node.destroy();\n        }\n    }\n\n    // update (dt) {}\n}\n"]}