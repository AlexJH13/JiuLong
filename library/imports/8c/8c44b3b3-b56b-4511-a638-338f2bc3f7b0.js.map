{"version":3,"sources":["assets/Script/MainMenu.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class MainMenu extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    cell: cc.SpriteFrame = null;\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    showTransition(transitionComplete: ()=>void): void {\n        // 创建一个全屏的节点作为转场容器\n        const transitionNode = new cc.Node('TransitionEffect');\n        transitionNode.setContentSize(cc.winSize);\n        transitionNode.position = cc.v3(cc.winSize.width / 2, cc.winSize.height / 2);\n        transitionNode.zIndex = 9999;\n        cc.director.getScene().addChild(transitionNode);\n        \n        // 创建六边形图案效果\n        const hexagonCount = 30; // 减少六边形数量\n        const hexagons: cc.Node[] = [];\n        \n        // 创建多个六边形\n        for (let i = 0; i < hexagonCount; i++) {\n            const hexagon = this.createHexagon(this.cell);\n            hexagon.scale = 0;\n            hexagon.opacity = 180; // 设置透明度，让背景可以透过\n            hexagon.position = cc.v3(\n                (Math.random() - 0.5) * cc.winSize.width * 0.8,\n                (Math.random() - 0.5) * cc.winSize.height * 0.8\n            );\n            \n            transitionNode.addChild(hexagon);\n            hexagons.push(hexagon);\n        }\n        \n        // 创建背景\n        const blackBg = new cc.Node('TransitionBackground');\n        const bgSprite = blackBg.addComponent(cc.Sprite);\n        bgSprite.spriteFrame = this.cell;\n        bgSprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\n        // 使用深蓝色而不是黑色，更接近主色调\n        blackBg.color = new cc.Color(25, 40, 60); // 深蓝色背景\n        blackBg.setContentSize(cc.winSize.width * 1.5, cc.winSize.height * 1.5);\n        blackBg.opacity = 0;\n        transitionNode.addChild(blackBg, -1); // 确保背景在最底层\n        \n        // 播放动画序列\n        // 1. 六边形放大动画\n        let finishedCount = 0;\n        hexagons.forEach((hexagon, index) => {\n            const delay = index * 0.02; // 错开时间\n            cc.tween(hexagon)\n                .delay(delay)\n                .to(0.5, { scale: 3 + Math.random() * 2 }, { easing: 'backOut' }) // 减小最大缩放比例\n                .call(() => {\n                    finishedCount++;\n                    if (finishedCount === hexagonCount) {\n                        // 2. 黑色背景淡入\n                        cc.tween(blackBg)\n                            .to(0.8, { opacity: 255 })\n                            .call(() => {\n                                // 3. 六边形旋转并缩小消失\n                                hexagons.forEach((hex, i) => {\n                                    cc.tween(hex)\n                                        .delay(i * 0.01)\n                                        .parallel(\n                                            cc.tween().to(0.5, { scale: 0 }),\n                                            cc.tween().by(0.5, { angle: 180 + Math.random() * 180 })\n                                        )\n                                        .start();\n                                });\n                                \n                                // 4. 完成转场\n                                cc.tween(blackBg)\n                                    .delay(0.6)\n                                    .call(() => {\n                                        // 动画完成，销毁节点并调用回调\n                                        transitionNode.destroy();\n                                        if (transitionComplete) {\n                                            transitionComplete();\n                                        }\n                                    })\n                                    .start();\n                            })\n                            .start();\n                    }\n                })\n                .start();\n        });\n    }\n    \n    // 创建六边形\n    private createHexagon(spriteFrame: cc.SpriteFrame): cc.Node {\n        const node = new cc.Node('Hexagon');\n        \n        // 设置节点大小\n        node.width = 100;\n        node.height = 100;\n        \n        // 使用Graphics组件绘制六边形\n        const graphics = node.addComponent(cc.Graphics);\n        \n        // 创建渐变效果\n        const gradientType = Math.floor(Math.random() * 3);\n        if (gradientType === 0) {\n            // 径向渐变\n            const gradient = graphics.node.addComponent(cc.Graphics);\n            gradient.fillColor = new cc.Color(255, 255, 255, 100);\n            \n            // 绘制三个不同大小的六边形，形成渐变效果\n            this.drawHexagon(gradient, 50, new cc.Color(40, 60, 90, 200));\n            this.drawHexagon(gradient, 40, new cc.Color(60, 90, 120, 180));\n            this.drawHexagon(gradient, 30, new cc.Color(80, 120, 160, 160));\n        } else if (gradientType === 1) {\n            // 单色带边框\n            graphics.lineWidth = 3;\n            graphics.strokeColor = new cc.Color(80, 120, 160);\n            graphics.fillColor = new cc.Color(40, 60, 90, 180);\n            \n            // 绘制六边形\n            const radius = 48; // 稍微小一点，留出边框空间\n            const angleStep = Math.PI / 3;\n            graphics.moveTo(radius * Math.cos(0), radius * Math.sin(0));\n            for (let i = 1; i <= 6; i++) {\n                const angle = i * angleStep;\n                graphics.lineTo(radius * Math.cos(angle), radius * Math.sin(angle));\n            }\n            graphics.close();\n            graphics.stroke();\n            graphics.fill();\n        } else {\n            // 双色分割\n            graphics.fillColor = new cc.Color(60, 100, 120);\n            \n            // 绘制六边形\n            const radius = 50;\n            const angleStep = Math.PI / 3;\n            graphics.moveTo(radius * Math.cos(0), radius * Math.sin(0));\n            for (let i = 1; i <= 6; i++) {\n                const angle = i * angleStep;\n                graphics.lineTo(radius * Math.cos(angle), radius * Math.sin(angle));\n            }\n            graphics.fill();\n            \n            // 添加装饰图案\n            const decoration = node.addComponent(cc.Graphics);\n            decoration.fillColor = new cc.Color(80, 120, 160, 150);\n            \n            // 绘制内部装饰\n            const innerRadius = 25;\n            decoration.moveTo(innerRadius * Math.cos(0), innerRadius * Math.sin(0));\n            for (let i = 1; i <= 6; i++) {\n                const angle = i * angleStep;\n                decoration.lineTo(innerRadius * Math.cos(angle), innerRadius * Math.sin(angle));\n            }\n            decoration.fill();\n        }\n        \n        return node;\n    }\n    \n    // 辅助方法：绘制六边形\n    private drawHexagon(graphics: cc.Graphics, radius: number, color: cc.Color): void {\n        graphics.fillColor = color;\n        const angleStep = Math.PI / 3;\n        graphics.moveTo(radius * Math.cos(0), radius * Math.sin(0));\n        for (let i = 1; i <= 6; i++) {\n            const angle = i * angleStep;\n            graphics.lineTo(radius * Math.cos(angle), radius * Math.sin(angle));\n        }\n        graphics.fill();\n    }\n\n    onClick(event: cc.Event.EventTouch, data: string): void{\n        if (data === 'start') {\n            // 播放转场动画，然后切换场景\n            this.showTransition(() => {\n                cc.director.loadScene('GameScene');\n            });\n        }\n    }\n}\n\n"]}