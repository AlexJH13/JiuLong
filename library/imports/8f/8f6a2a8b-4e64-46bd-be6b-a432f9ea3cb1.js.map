{"version":3,"sources":["assets/Script/CellShader.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEhF,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,8BAAY;IAApD;;IA4BA,CAAC;IA1BG,wBAAwB;IAExB,2BAAM,GAAN;QAAA,iBAiBC;QAhBG,IAAI,CAAC,YAAY,CAAC;YACd,IAAI,EAAE,GAAG,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;YACvD,aAAa;YACb,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YACf,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAEjB,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;YACpB,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;YACxB,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;YACxB,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;YACxB,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACnG,CAAC,CAAC,CAAA;IACN,CAAC;IAED,0BAAK,GAAL;IAEA,CAAC;IAzBgB,UAAU;QAD9B,OAAO;OACa,UAAU,CA4B9B;IAAD,iBAAC;CA5BD,AA4BC,CA5BuC,EAAE,CAAC,SAAS,GA4BnD;kBA5BoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class CellShader extends cc.Component {\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.scheduleOnce(()=>{\n            let sf = this.node.getComponent(cc.Sprite).spriteFrame;\n            // @ts-ignore\n            let uv = sf.uv;\n            let xMin = uv[0];\n            let xMax = uv[6];\n            let yMin = uv[5];\n            let yMax = uv[3];\n\n            let l = xMax - xMin;\n            xMin = xMin - l * 0.001;\n            xMax = xMax + l * 0.001;\n            yMin = yMin - l * 0.001;\n            yMax = yMax + l * 0.001;\n            this.node.getComponent(cc.Sprite).getMaterial(0).setProperty('rect', [xMin, xMax, yMin, yMax]);\n        })\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}